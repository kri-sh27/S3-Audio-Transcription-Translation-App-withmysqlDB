name: CI/CD Pipeline for Streamlit App to EC2 (Docker Hub)

on:
  push:
    branches:
      - main  # or your desired branch

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx # Add this step to set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Run Unit Tests
      #   run: |
      #     pytest tests/ --maxfail=1 --disable-warnings --tb=short
     

      # - name: Set up Python
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: '3.9'

      - name: Install dependencies for testing
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Unit Tests
        run: |
          pytest tests/ --maxfail=1 --disable-warnings --tb=short
      - name: Build and push Docker image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_PUBLIC_DNS }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "Pulling latest image..."
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest

            echo "Stopping/removing existing container if it exists..."
            if [ "$(sudo docker ps -aq -f name=my-streamlit-app)" ]; then
                sudo docker stop my-streamlit-app || true
                sudo docker rm my-streamlit-app || true
            fi

            echo "Checking if any other container is publishing port 8501..."
            if [ "$(sudo docker ps -q -f publish=8501)" ]; then
                CONTAINER_ID_USING_PORT=$(sudo docker ps -q -f publish=8501)
                echo "Stopping and removing container $CONTAINER_ID_USING_PORT using port 8501..."
                sudo docker stop $CONTAINER_ID_USING_PORT || true
                sudo docker rm $CONTAINER_ID_USING_PORT || true
            fi

            echo "Forcefully killing any process on port 8501 (just in case)..."
            sudo fuser -k 8501/tcp || true

            echo "Running new container..."
            sudo docker run -d \
              --network host \
              --name my-streamlit-app \
              -e MYSQL_HOST="127.0.0.1" \
              -e MYSQL_USER="${{ secrets.MYSQL_USERNAME }}" \
              -e MYSQL_PASSWORD="${{ secrets.MYSQL_PASSWORD }}" \
              -e MYSQL_DATABASE="${{ secrets.MYSQL_DATABASE_NAME }}" \
              -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
              -e S3_BUCKET_NAME="${{ secrets.S3_BUCKET_NAME }}" \
              -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
              -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
              -e AWS_REGION="${{ secrets.AWS_REGION }}" \
              ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest

                  